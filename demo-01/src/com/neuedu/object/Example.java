package com.neuedu.object;

public class Example {
    /**
     *   面向对象
     *  1:人机猜拳
     *  2：纸牌
     *
     * **/
    /**
     * 1：面向对象：
     *
     * 2：类--图纸：一组相同的静态数据和动态数据的抽象
     *                         属性：变量   方法
     *    对象--楼：一个类的实例化对象
     *                  new
     *
     *3:三大特征;
     *   封装：保证数据的安全
     *         将属性私有化
     *         实现：1）通过构造器
     *               2)通过getter和setter进行设置
     *   继承：
     *       一个类被另一个类继承，实现所有的方法，
     *       其中：被继承的类--父类|超类
     *             继承类--子类
     *       特点：1：代码的重用
     *             2：子类不光有了父类的特征，还有自己独有的特征。
     *   多态：
     *      调用同一方法实现不同的形态
     *      三个条件：1：有继承|实现
     *                 2:子类有父类重写方法
     *                 3：父类的对象使用子类来实例化
     *
     *
     *抽象：abstract
     *      抽象方法
     *      抽象类：成员变量、非抽象方法、抽象方法
     *          特殊：
     *           1）没有抽象方法
     *           2）全部是抽象方法
     *      注意：1)抽象类被继承之后，要么实现所有的抽象方法，要么将此类定义为抽象类
     *      2)抽象类不能进行实例化，可以使用非抽象类的子类进行实例化
     *接口
     *
     *
     * 案例：
     * 1：定义一个数据库连接接口jdbc：
     *    connection
     *    execute
     *    result
     *2：子类：mysql进行连接
     *3： 子类：oracle进行连接
     *4： 工厂的类：当你请求是mysql的时候，输出mysql的实例化对象
     *               当你请求是oracle的时候，输出oracle的实例化对象
     *       public static JDBC create(String name)
     *5:测试
     *
     *
     *
     *
     * static ：静态  随着类的存在而存在
     *          变量--静态变量
     *          方法--静态的方法
     *          调用：1）使用对象调用 2）类调用
     *
     * final: 不变
     *        1）修饰成员变量--常量
     *        2）修饰方法--不能够被重写
     *        3）修饰局部变量--常量
     *
     * 作业2：
     * **/

}
